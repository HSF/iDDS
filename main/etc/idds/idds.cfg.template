# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Authors:
# - Wen Guan, <wen.guan@cern.ch>, 2019

[common]
# if logdir is configured, idds will write to idds.log in this directory.
# else idds will go to stdout/stderr.
# With supervisord, it's good to write to stdout/stderr, then supervisord can manage and rotate logs.
# logdir = /var/log/idds
loglevel = DEBUG

# iddsserver.cern.ch: aipanda181, aipanda182
# aipanda182 prod
# aipanda181 prod
# aipanda160 dev
# aipanda180 condor
# aipanda187 monitor(can be reused)
# aipanda160, 161, 162 (new vms)
# doma aipanda015, aipanda016, and aipanda017
# 
# new
# iddsserver: aipanda102,aipanda103
# idds atlas condor pool: aipanda101
# dev: aipanda104
# doma: aipanda105-107
# idds-mon: aipanda108
[database]
#default = mysql://idds:idds@pcuwvirt5.cern.ch/idds
#default = mysql://idds:idds_passwd@aipanda182.cern.ch/idds
#default = sqlite:////tmp/idds.db
#default = oracle://_____________:___________@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=_________)(PORT=______))(ADDRESS=(PROTOCOL=TCP)(HOST=_________)(PORT=_____))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=__________)))
#default = oracle://_____________:___________@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=127.0.0.1)(PORT=______))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=_____________)))

#default = postgresql://idds:idds@localhost/idds
pool_size=20
pool_recycle=3600
echo=0
pool_reset_on_return=rollback

[rest]
host = https://aipanda182.cern.ch:443/idds
#url_prefix = /idds
#cacher_dir = /tmp
cacher_dir = /data/idds

#[section]
#attr1 = <attr1>
#plugin.<plugin_name> = <lib.path.name.ClassName>
#plugin.<plugin_name>.<attr1> = <value1>
#plugin.<plugin_name>.<attr2> = <value2>

[main]
# agents = clerk, marshaller, transformer, carrier, conductor, consumer
agents = clerk, transformer, carrier, conductor

[eventbus]
# backend = database
backend = message

[coordinator]
coordination_interval_delay = 300

[clerk]
num_threads = 3
poll_time_period = 120
poll_operation_time_period = 120
retrieve_bulk_size = 3
pending_time = 3

[transformer]
num_threads = 8
poll_time_period = 120
retrieve_bulk_size = 3
poll_operation_time_period = 240
message_bulk_size = 10000

atlashpowork.workdir = /data/idds_processing
atlashpowork.input_json = idds_input.json
atlashpowork.output_json = idds_output.json

atlashpowork.nevergrad.executable = docker
atlashpowork.nevergrad.arguments = run -v $(pwd):/data wguanicedew/idds_hpo_nevergrad python /opt/hyperparameteropt_nevergrad.py --max_points=%%MAX_POINTS --num_points=%%NUM_POINTS --input=/data/%%IN --output=/data/%%OUT

atlasactuatorwork.workdir = /data/idds_processing

domapandawork.num_retries = 0

[carrier]
num_threads = 1
poll_time_period = 5
retrieve_bulk_size = 10
message_bulk_size = 2000

atlaslocalpandawork.work_dir = /data/idds_processing

[conductor]
retrieve_bulk_size = 10
threshold_to_release_messages = 1000
random_delay = 60
plugin.notifier = idds.atlas.notifier.messaging.MessagingSender
# plugin.notifier.brokers = atlas-test-mb.cern.ch
plugin.notifier.brokers = atlas-mb.cern.ch
plugin.notifier.port = 61013
# plugin.notifier.vhost =
# plugin.notifier.destination = /queue/atlas.idds
plugin.notifier.destination = /topic/atlas.idds
plugin.notifier.username = atlasidds
plugin.notifier.password = ******
plugin.notifier.broker_timeout = 10

# to receive messages from panda to update job status.
# It's good that the value is smaller than the carrier poll_time_period
# With it enabled, the carrier poll_time_period can be higher.
receiver_delay_period = 60

[consumer]
retrieve_bulk_size = 10
plugin.receiver = idds.atlas.notifier.messaging.MessagingReceiver
plugin.receiver.brokers = atlas-mb.cern.ch
plugin.receiver.port = 61013
plugin.receiver.destination = /queue/Consumer.monitor.atlas.idds
plugin.receiver.username = atlasidds
plugin.receiver.password = *****
plugin.receiver.broker_timeout = 10

[cache]
host = localhost
port = 6379
