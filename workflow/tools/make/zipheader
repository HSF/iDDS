#!/bin/bash

which unzip > /dev/null
if [ $? -ne 0 ]; then
echo "ERROR:  unzip is missing"
exit 111
fi

unzip -o $0 > /dev/null 2>&1
# PYNAME=`echo $0 | sed -e "s/\(-.*$\)/.py/"`

if command -v python3 &> /dev/null
then
    PY_COMMAND=python3
else
    if command -v python2 &> /dev/null
    then
        PY_COMMAND=python2
    else
        PY_COMMAND=python
    fi
fi

current_dir=$PWD
mkdir tmp_bin
ln -fs `which $PY_COMMAND` tmp_bin/python
export PATH=${current_dir}/tmp_bin:${current_dir}/bin:$PATH

ln -fs ${current_dir}/bin/* ${current_dir}/

export PYTHONPATH=${current_dir}/lib_py:$PYTHONPATH
export IDDS_CONFIG=${current_dir}/etc/idds/idds.cfg.client.template

if [[ ! -z "${PANDA_AUTH_DIR}" ]] && [[ ! -z "${PANDA_AUTH_ORIGIN}" ]]; then
    export PANDA_AUTH_ID_TOKEN=$(cat $PANDA_AUTH_DIR);
    export PANDA_AUTH_VO=$PANDA_AUTH_ORIGIN;
    export IDDS_OIDC_TOKEN=$(cat $PANDA_AUTH_DIR);
    export IDDS_VO=$PANDA_AUTH_ORIGIN;
    export PANDA_AUTH=oidc;
else
    unset PANDA_AUTH;
    export IDDS_AUTH_TYPE=x509_proxy;
fi;

export PANDA_CONFIG_ROOT=$(pwd);
export PANDA_VERIFY_HOST=off;
export PANDA_BEHIND_REAL_LB=true;


#export PYTHONPATH
echo using $PY_COMMAND

# exec python "$@"
python "$@"
ret=$?

echo pwd
pwd; ls

echo rm -fr ${current_dir}/lib_py ${current_dir}/etc ${current_dir}/bin ${current_dir}/tmp_bin ${current_dir}/run_workflow_wrapper ${current_dir}/__pycache__
rm -fr ${current_dir}/lib_py ${current_dir}/etc ${current_dir}/bin ${current_dir}/tmp_bin ${current_dir}/run_workflow_wrapper ${current_dir}/__pycache__

exit $ret
